19. Remove Nth Node From End of List

Given the head of a linked list, remove the nth node from the end of the list and return its head.

 

Example 1:


Input: head = [1,2,3,4,5], n = 2
Output: [1,2,3,5]
Example 2:

Input: head = [1], n = 1
Output: []
Example 3:

Input: head = [1,2], n = 1
Output: [1]
 

Constraints:

The number of nodes in the list is sz.
1 <= sz <= 30
0 <= Node.val <= 100
1 <= n <= sz
 

Follow up: Could you do this in one pass?





class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        if(head==null||head.next==null&&n==1)
            return null;
        int c=count(head)-n,i=0;
        if(c==0)
        {
            return head.next;
        }
        ListNode ptr;
        for(ptr=head;ptr!=null;ptr=ptr.next,i++)
        {
            if((i+1)==c)
            {
                ptr.next=ptr.next.next;
                break;
            }
        }
        return head;
    }
    static int count(ListNode head)
    {
        ListNode ptr;
        int c=0;
        for(ptr=head;ptr!=null;ptr=ptr.next)
        {
            c++;
        }
        return c;
    }
}
