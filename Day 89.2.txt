1582. Special Positions in a Binary Matrix

Given a rows x cols matrix mat, where mat[i][j] is either 0 or 1, return the number of special positions in mat.

A position (i,j) is called special if mat[i][j] == 1 and all other elements in row i and column j are 0 (rows and columns are 0-indexed).

 

Example 1:

Input: mat = [[1,0,0],
              [0,0,1],
              [1,0,0]]
Output: 1
Explanation: (1,2) is a special position because mat[1][2] == 1 and all other elements in row 1 and column 2 are 0.
Example 2:

Input: mat = [[1,0,0],
              [0,1,0],
              [0,0,1]]
Output: 3
Explanation: (0,0), (1,1) and (2,2) are special positions. 
Example 3:

Input: mat = [[0,0,0,1],
              [1,0,0,0],
              [0,1,1,0],
              [0,0,0,0]]
Output: 2
Example 4:

Input: mat = [[0,0,0,0,0],
              [1,0,0,0,0],
              [0,1,0,0,0],
              [0,0,1,0,0],
              [0,0,0,1,1]]
Output: 3
 

Constraints:

rows == mat.length
cols == mat[i].length
1 <= rows, cols <= 100
mat[i][j] is 0 or 1.






class Solution {
    public int numSpecial(int[][] m) {
        int c=0,k=m.length;
        for(int i=0;i<k;i++)
        {
            int g=m[i].length;
            for(int j=0;j<g;j++)
            {
                if(m[i][j]==1)
                {
                    int c1=0;
                    for(int v=0;v<k;v++)
                    {
                        if(m[v][j]==1)
                        {
                            c1++;
                        }
                        if(c1>1)
                            break;
                    }
                    if(c1==1)
                    {
                        int c2=0;
                        for(int d=0;d<g;d++)
                        {
                            if(m[i][d]==1)
                                c2++;
                            if(c2>1)
                                break;
                        }
                        if(c2==1)
                            c++;
                    }
                }
            }
        }
        return c;
    }
}