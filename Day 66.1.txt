1399. Count Largest Group

Given an integer n. Each number from 1 to n is grouped according to the sum of its digits. 

Return how many groups have the largest size.

 

Example 1:

Input: n = 13
Output: 4
Explanation: There are 9 groups in total, they are grouped according sum of its digits of numbers from 1 to 13:
[1,10], [2,11], [3,12], [4,13], [5], [6], [7], [8], [9]. There are 4 groups with largest size.
Example 2:

Input: n = 2
Output: 2
Explanation: There are 2 groups [1], [2] of size 1.
Example 3:

Input: n = 15
Output: 6
Example 4:

Input: n = 24
Output: 5
 

Constraints:

1 <= n <= 10^4





class Solution {
    public int countLargestGroup(int n) {
        HashMap<Integer,Integer> nm=new HashMap<>();
        int i,d,s;
        for(i=1;i<=n;i++)
        {
            s=0;
            d=i;
            while(d!=0)
            {
                s=s+(d%10);
                d/=10;
            }
            if(nm.containsKey(s))
                nm.put(s , nm.get(s)+1);
            else
                nm.put(s,1);
        }
        s=1;
        i=0;
        for(int k : nm.keySet())
        {
            if(nm.get(k)>s)
            {
                s=nm.get(k);
                i=1;
            }
            else if(nm.get(k)==s)
                i++;
        }
        return i;
    }
}