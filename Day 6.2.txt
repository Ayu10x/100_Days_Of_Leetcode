169. Majority Element
Easy

Given an array nums of size n, return the majority element.

The majority element is the element that appears more than ⌊n / 2⌋ times. You may assume that the majority element always exists in the array.

 

Example 1:

Input: nums = [3,2,3]
Output: 3
Example 2:

Input: nums = [2,2,1,1,1,2,2]
Output: 2
 

Constraints:

n == nums.length
1 <= n <= 5 * 104
-231 <= nums[i] <= 231 - 1

class Solution {
    public int majorityElement(int[] nums) {
        int a[]=new int[nums.length];
        int b[]=new int[nums.length];
        int i,j,m=0,du;
        for(i=0;i<nums.length;i++)
        {
            for(j=0;j<m;j++)
            {
                if(nums[i]==a[j])
                    break;
            }
            if(j==m)
            {
                a[m]=nums[i];
                b[m++]=1;
            }
            else
                b[j]=b[j]+1;
        }
        for(i=0;i<m-1;i++)
        {
            for(j=0;j<m-i-1;j++)
            {
                if(b[j+1]>b[j])
                {
                    du=b[j];
                    b[j]=b[j+1];
                    b[j+1]=du;
                    du=a[j];
                    a[j]=a[j+1];
                    a[j+1]=du;
                }
            }
        }
        return a[0];
    }
}
