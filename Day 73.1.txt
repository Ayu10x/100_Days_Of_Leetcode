567. Permutation in String

Given two strings s1 and s2, return true if s2 contains a permutation of s1, or false otherwise.

In other words, return true if one of s1's permutations is the substring of s2.

 

Example 1:

Input: s1 = "ab", s2 = "eidbaooo"
Output: true
Explanation: s2 contains one permutation of s1 ("ba").
Example 2:

Input: s1 = "ab", s2 = "eidboaoo"
Output: false
 

Constraints:

1 <= s1.length, s2.length <= 104
s1 and s2 consist of lowercase English letters.




class Solution {
    public boolean checkInclusion(String s1, String s2) {
        char c[]=s1.toCharArray();
        Arrays.sort(c);
        s1=String.valueOf(c);
        for(int i=0;i<=s2.length()-s1.length();i++)
        {
            String k=s2.substring(i,(i+s1.length()));
            char m[]=k.toCharArray();
            Arrays.sort(m);
            k=String.valueOf(m);
            if(s1.equals(k))
                return true;
        }
        return false;
    }
}